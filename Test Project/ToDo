



notes to self:
room goes out at all edges in issac, maybe use like 75degree angle.


LINQ seems like cool shit but seems useless for 2d arrays.


look int OnDrawGizmos

look into celular atomita and marching squares.

an outline edge is two verticies which share exactly one triangle.


look up structs, know what the difrence is.

look up Dictionary in c#

look up indexers in c# seems useful for wepon wheel

look up math.Sign

look up bresenhams line algorithm

figure out what a mesh filter and a mesh renderer are.


to make a laser just make a really long bullet.

figure out what the diference between a trigger and a colider is.


forward.normalized might fix the momentium thing

laser should have rotation lock for player

Goals:

lasers

maybe networking



problems:
bullets dont have momentum of the gun they are shot from- fixed! kinda broke again

camera should "clamp" to the edges of rooms if you move to close to the edge.

refacter classes into one script maybe?? 



make sure all damage and health mecanics are tied to phisics frame rate. currently lasers are tied to the framerate to do their ticks of damage. im also not sure fire rate is not framerate dependent 


when the laser shooter shoots his laser he is only paralized for the begining of the shot not until the laser disapears.


Shit I will need latter: player transfer between scenes:

https://forum.unity3d.com/threads/how-to-transfer-player-data-between-scenes.443347/







sources:
https://www.youtube.com/user/Brackeys specifically his how to make a unity game basics series.
https://unity3d.com/learn/tutorials/projects/space-shooter-tutorial
https://unity3d.com/learn/tutorials/projects/procedural-cave-generation-tutorial




for fun now that school has started Im going to start logging how much time im working on this.

0. 10-25 hours
1.~2:30:00
2. 1:41:46







stuff for the speach

spent like two hours trying to have the properties of the projectile determined by the gun that made it then realized that should be something the bullet handles itself.

