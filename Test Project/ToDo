



notes to self:
room goes out at all edges in issac, maybe use like 75degree angle.


LINQ seems like cool shit but seems useless for 2d arrays.


look int OnDrawGizmos

look into celular atomita and marching squares.

an outline edge is two verticies which share exactly one triangle.


look up structs, know what the difrence is.

look up Dictionary in c#

look up indexers in c# seems useful for wepon wheel

look up math.Sign

look up bresenhams line algorithm

figure out what a mesh filter and a mesh renderer are.


to make a laser just make a really long bullet.

figure out what the diference between a trigger and a colider is.


forward.normalized might fix the momentium thing

laser should have rotation lock for player

Goals:

lasers

maybe networking





you should be able to pass in a value for the speed and damage too a bullet and with that value the bullet should be able to set an ofset and contol min and max bounds.



problems:
bullets dont have momentum of the gun they are shot from- fixed! kinda broke again

camera should "clamp" to the edges of rooms if you move to close to the edge.

refacter classes into one script maybe?? 



make sure all damage and health mecanics are tied to phisics frame rate. currently lasers are tied to the framerate to do their ticks of damage. im also not sure fire rate is not framerate dependent 


when the laser shooter shoots his laser he is only paralized for the begining of the shot not until the laser disapears.

if you get hit (by another rb) then try to shoot your laser you just end up spinning around.

there is a rendering error with enemy lasers now that I Fixed the walls

movement is completely broke, it gets floaty with the forces


Shit I will need latter: player transfer between scenes:

https://forum.unity3d.com/threads/how-to-transfer-player-data-between-scenes.443347/







sources:
https://www.youtube.com/user/Brackeys specifically his how to make a unity game basics series.
https://unity3d.com/learn/tutorials/projects/space-shooter-tutorial
https://unity3d.com/learn/tutorials/projects/procedural-cave-generation-tutorial




for fun now that school has started Im going to start logging how much time im working on this.

0. 10-25 hours
1.~2:30:00
2. 1:41:46
3. 1:34:58






stuff for the speach

spent like two hours trying to have the properties of the projectile determined by the gun that made it then realized that should be something the bullet handles itself.








procedural generation plan:


make cells
cellular atomita cells
make a door along each wall of the border.
make sure all walls are conected in some way. probs by drawing a line to a random point int the room maybe have difrent pathing to get to the points so it is not just a strait wall every time.

the walls at the borders should be indestructable.

when you click on a room it generates a new room of a bounded random size, unless the new room already boarders an existing room, then it must be big enough to not intersect or if it does line up it should use the previously unused door
every room should have a small chance to spawn a door to the next level THIS DOES NOT NECCESSARLY NEED TO BE IN THE MAIN AREA, if it is cut off it can just be remade in another room.

at the start of the next floor maybe have a boss?



maybe only have the walls be visable if they are exposed ie there is a 1 in their von nomin nabhorhood.



