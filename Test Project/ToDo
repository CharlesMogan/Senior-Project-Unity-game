



notes to self:
room goes out at all edges in issac, maybe use like 75degree angle.


LINQ seems like cool shit but seems useless for 2d arrays.


look int OnDrawGizmos

look into celular atomita and marching squares.


look up structs, know what the difrence is.

look up Dictionary in c#

look up indexers in c# seems useful for wepon wheel

look up math.Sign

look up bresenhams line algorithm

figure out what a mesh filter and a mesh renderer are.


to make a laser just make a really long bullet.

figure out what the diference between a trigger and a colider is.

forward.normalized might fix the momentium thing

laser should have rotation lock for player


trying to code in culling is entirely 100% pointless 
using built in occlusion culling should help. https://docs.unity3d.com/Manual/OcclusionCulling.html


optimising for cubes:
https://forum.unity.com/threads/optimizing-thousands-of-cubes.77093/


Goals:

lasers

maybe networking



break out the move twords player as its own script if you can.





you should be able to pass in a value for the speed and damage too a bullet and with that value the bullet should be able to set an ofset and contol min and max bounds.



problems:
bullets dont have momentum of the gun they are shot from- fixed! kinda broke again

camera should "clamp" to the edges of rooms if you move to close to the edge.

refacter classes into one script maybe?? 



make sure all damage and health mecanics are tied to phisics frame rate. currently lasers are tied to the framerate to do their ticks of damage. im also not sure fire rate is not framerate dependent 


when the laser shooter shoots his laser he is only paralized for the begining of the shot not until the laser disapears.

if you get hit (by another rb) then try to shoot your laser you just end up spinning around.

there is a rendering error with enemy lasers now that I Fixed the walls

movement is completely broke, it gets floaty with the forces


Shit I will need latter: player transfer between scenes:

https://forum.unity3d.com/threads/how-to-transfer-player-data-between-scenes.443347/


lasers should destroy bullets.




sources:
https://www.youtube.com/user/Brackeys specifically his how to make a unity game basics series.
https://unity3d.com/learn/tutorials/projects/space-shooter-tutorial
https://unity3d.com/learn/tutorials/projects/procedural-cave-generation-tutorial




for fun now that school has started Im going to start logging how much time im working on this.

0. 10-25 hours
1.~2:30:00
2. 1:41:46
3. 1:34:58






stuff for the speach

spent like two hours trying to have the properties of the projectile determined by the gun that made it then realized that should be something the bullet handles itself.








--------------------------------------------------------------procedural generation plan:


make cells
cellular atomita cells
make a door along each wall of the border.
make sure all walls are conected in some way. probs by drawing a line to a random point int the room maybe have difrent pathing to get to the points so it is not just a strait wall every time.

the walls at the borders should be indestructable.

when you click on a room it generates a new room of a bounded random size, unless the new room already boarders an existing room, then it must be big enough to not intersect or if it does line up it should use the previously unused door
every room should have a small chance to spawn a door to the next level THIS DOES NOT NECCESSARLY NEED TO BE IN THE MAIN AREA, if it is cut off it can just be remade in another room.

at the start of the next floor maybe have a boss?



maybe only have the walls be visable if they are exposed ie there is a 1 in their von nomin nabhorhood.



///----------------------------------- Ideas for enemy movement paterns:------------------------------------

Teleporting:
teleporting enemies would engage when the player enters a certin radius, or when they are shot the first time. after this they will relentlessly prasue the player


	-right behind you and then dellay and then laser.

	-teleport every second or two to a random position around the player.


normal: 
	-move tword player but also tries to dodge bullets with sometype of triger or collider.
	a melee varient of this would be nice.










///------------------------------------------------where----------------------------------------------------------
	should the map generate a random powerup or should a powerup generate a random effect. - figured it out pickups should have a set effect but which one is made 
















///----------------------------------------------praposal-------------------------------------------------------

I at least need an intro paragraph.

	My goal with this project is to make a geometric styled top down shooter. The envirenment in the game will consist of a series of random rooms filled with various enemies. At the end of each floor will be a boss that the player must deffet before they can advance to the next one.


through this project I will explore the basics of the unity game engine and c# and procedular generation, all subjects I have no experence with at all.


I am proposing to make a top down shooter with the following features:


1. A player that can fire at least two distinct projectile types. 
	A.Possible Projectile types include:
		medium speed bullets fired rapidly.
		a beam wepon that can penetrate enemies.
			it will extend to the length of the room.
			there is a delay before firing during which time the player is not able to move.
			perhaps taking enough damage will prevent the laser from firing, and unparalize the player early.
			perhaps during the charge up there is a sighting laser

	When the player takes damage they will be made invincible for a short time, maybe half a second during this time they will be invincable.

2. A HUD that at the minimum desplays the players health.

3. At least X distinct enemies with diffrent combinations of movement and shooting paterns.
	A. possible enemies include:
		A Stationary turret that shoots:
			bullets in a random direction.
			bullets at the player.
			4 bullets, one in each of the cardinal directions.
			4 bullets, one in each of the primary intercardinal directions.
			8 bullets, one in each of the cardinal directions and one in the primary intercardinal directions.
			8 bullets, one in each of the secondary intercardinal directions.
			16 bullets, one in each direction.

			in the fashion of any turret listed above, but also rotates.

			in the fashion of any turret listed above, but instead fires a beam weapon.



		A mobile enemy that moves directly towards the player:
			and shoots bullets.
			and shoots bullets but also moves to strafe the player once close enough.
			doesn't shoot, and detenates on impact with the player dealing high damage.
			and detenates on impact with the player dealing high damage.
			and shoots bullets, and has a front facing shield that blocks a limited number of bullets.
		

		A mobile enemy that moves in a zig-zag twords the player moving at 45 degrees reletive to the player and alterneates every second or two:
			and does anything the enemy above does.
			does not face the player but has an indistructable shield.


4. at least one boss with at least 2 phases that a player can face at the end of a floor.

5. A main menu that you can exit to the desktop from or start a game.

6. A pickup system that lets the player improve their character.
	A. Possible pickups include:
		Increasing character health.
		Increasing beam Damage.
		Increasing bullet Damage.
		Increasing bullet fire rate.
		Increasing player movement speed.
		Increasing beam weapon diamater.
		Increasing bullet size.
		increasing bullet movement speed.
		increasing bullet range. (time before despawn)
		Decreasing the time the player is paralized before firing thier beam weapon.
		Decreasing the delay before player can fire their beam weapon.
		Decreasing player size (making it easyer to dodge).
		Pull back camera to make it easyer to see.

	All pickups will have caps so that the players stats do not become to high. This is not just a balance issue as something like too high a movement speed could make the game very unfun.

	Which pickups the player will encounter will be determined by the random seed.

	Pickups will be given as a reward at the end of every room.
	or
	Pickups will be given as a reward at the end of every floor. 

	Enemies will also have a small chance of generating a health pickup on death.



7. A dungen based on procedural generation that generates rooms with distructable walls that conect together and eventually lead to a boss room.
	The dungeon will consist of mutliple rooms of random size.
	Each room will consist of many cube walls that will be destructable with the expception of the last layer of wall, which will be indestructable.
	the distrubution of these wall cubes will be determined by a cellular atomita algarithum.
	
	The walls and door placement will be done with ahead of time with a single thread.
	
	Once the rooms placement has been determined, the contents of each room can be gernerated with multiple threads.
	Their will be one or more door out of each room.

	Inside a room conectivity between doors will be determined with bresenhams line algorithm.
		Any wall cubes under the line will be disabled.

		The lines will go from all doors the center of the room ensuring that getting to any door is possible.
		or
		The lines will go from all doors a random point in the room ensuring that getting to any door is possible.
		or
		The lines will go from all doors to all other doors in the room ensuring that getting to any door is possible.

	or
	I find a more clever way to do this.

	if two rooms are adjacent they will share a door.
	Each rooms door can only be opened once the room's enemies have been defeated.
	
	the first room is pregenerated the others will be generated once the door is opened. - no longer being concidered.
	or
	the first room is pregenerated the others will be generated once entering an adjacent room.
	or
	The entire floor is generated once starting a game, the next floor is generated when going to the next floor

	The final decision on this will be based on how long it takes to generate a satisfactory room.